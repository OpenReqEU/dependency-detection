swagger: '2.0'
info:
  description: 'A REST API used to identify dependencies from requirements. Requirements are stored in a JSON file. The dependencies are detailed in an input ontology, which is used to support the detection.'
  version: '1.0'
  title: Dependency detection RESTful API
  contact:
    name: UPC-GESSI (OpenReq)
    url: 'http://openreq.eu/'
  license:
    name: EPL-v1.0
    url: 'https://www.eclipse.org/legal/epl-v10.html'
host: 'https://api.openreq.eu/dependency-detection'
basePath: /
tags:
- name: Cross-reference detection Service
  description: API related to cross-reference detection
- name: controller
  description: Controller
paths:
  '/upc/dependency-detection/json/ontology/{projectId}':
    post:
      tags:
      - controller
      summary: Uploads JSON and Ontology files to detect dependencies
      description: 'Uploads an ontology (in RDF/XML language) and a JSON Object to the server, extracts the dependencies of all the project''s requirements stored in JSON by the support of the ontology and finally removes the uploaded files.'
      operationId: uploadJSONFileUsingPOST
      consumes:
      - multipart/form-data
      produces:
      - '*/*'
      parameters:
      - name: ontology
        in: formData
        description: The Ontology file to upload (RDF/XML lang.)
        required: true
        type: file
      - name: json
        in: formData
        description: The JSON file to upload
        required: true
        type: string
      - name: projectId
        in: path
        description: Id of the project where the requirements to analize are.
        required: true
        type: string
      - name: synonymy
        in: query
        description: 'If true, semantic similarity (synonymy) detection is applied to improve the detection algorithm.'
        required: true
        type: boolean
      - name: threshold
        in: query
        description: Threshold of semantic similarity to detect synonyms (included).
        required: false
        type: number
        format: double
      responses:
        '0':
          description: 'Non content: There is no content to submit.'
        '200':
          description: 'OK: The request has succeeded.'
          schema:
            type: string
        '201':
          description: 'Created: The request has been fulfilled and has resulted in one or more new resources being created.'
          schema:
            type: string
        '401':
          description: 'Unauthorized: The request has not been applied because it lacks valid authentication credentials for the target resource.'
        '403':
          description: 'Forbidden: The server understood the request but refuses to authorize it.'
        '404':
          description: 'Not Found: The server could not find what was requested by the client.'
        '500':
          description: Internal Server Error. For more information see ‘message’ in the Response Body.
